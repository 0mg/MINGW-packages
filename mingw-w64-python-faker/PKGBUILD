# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=faker
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=2.0.3
pkgrel=1
pkgdesc="Faker generates fake data for you (mingw-w64)"
arch=('any')
url="https://faker.readthedocs.io/en/master/"
license=('MIT')
depends=("${MINGW_PACKAGE_PREFIX}-python3"
         "${MINGW_PACKAGE_PREFIX}-python3-dateutil"
         "${MINGW_PACKAGE_PREFIX}-python3-six"
         "${MINGW_PACKAGE_PREFIX}-python3-text-unidecode")
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-setuptools")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-ukpostcodeparser"
              "${MINGW_PACKAGE_PREFIX}-python3-mock"
              "${MINGW_PACKAGE_PREFIX}-python3-email-validator")
install=${_realname}3-${CARCH}.install
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/joke2k/faker/archive/v${pkgver}.tar.gz")
sha512sums=('5a9ba29cf06829e37ff8c9944a6133721d1bf2299f1c6501e8b91b42bbade8cae5dbedff88bfdaede6e90105ea94045440a035000c9bbe487b1ed7cb15cca445')

prepare() {
  cd "${srcdir}"
  rm -rf python3-build-${CARCH}" | true
  cp -r "${_realname}-${pkgver}" "python3-build-${CARCH}""
}

build() {
  msg "Python 3 build for ${CARCH}"  
  cd "${srcdir}/python3-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python3 setup.py build
}

check() {
  msg "Python 3 test for ${CARCH}"
  cd "${srcdir}/python3-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python3 setup.py test || warning "Tests failed"
}

package() {
  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/LICENSE.txt"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
}
