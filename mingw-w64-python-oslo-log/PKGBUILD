# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=oslo-log
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=3.44.1
pkgrel=2
pkgdesc="Oslo Logging Library (mingw-w64)"
arch=('any')
url='https://pypi.python.org/pypi/oslo.log'
license=('Apache')
depends=("${MINGW_PACKAGE_PREFIX}-python3"
         "${MINGW_PACKAGE_PREFIX}-python3-six"
         "${MINGW_PACKAGE_PREFIX}-python3-pbr"
         "${MINGW_PACKAGE_PREFIX}-python3-oslo-config"
         "${MINGW_PACKAGE_PREFIX}-python3-oslo-context"
         "${MINGW_PACKAGE_PREFIX}-python3-oslo-i18n"
         "${MINGW_PACKAGE_PREFIX}-python3-oslo-utils"
         "${MINGW_PACKAGE_PREFIX}-python3-oslo-serialization"
         "${MINGW_PACKAGE_PREFIX}-python3-debtcollector"
         "${MINGW_PACKAGE_PREFIX}-python3-dateutil"
         "${MINGW_PACKAGE_PREFIX}-python3-monotonic")
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-setuptools")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python3-mock"
              "${MINGW_PACKAGE_PREFIX}-python3-oslotest"
              "${MINGW_PACKAGE_PREFIX}-python3-testrepository")
options=('staticlibs' 'strip' '!debug')
source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/openstack/oslo.log/archive/${pkgver}.tar.gz")
sha512sums=('63e2ff26643f9cc37ef46f31b0ae16d0df6078e5a1431b6610dd15bcc2fb5e59b6723cfabb10117801d774c63f783f4c86a100dff611993b6f6447b78a36f3d8')

prepare() {
  cd "${srcdir}/oslo.log-$pkgver"

  sed -i 's/unittest2/unittest/g' oslo_log/tests/unit/*.py

  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver

  export PBR_VERSION=$pkgver
}

build() {
  cd "${srcdir}/oslo.log-$pkgver"

  ${MINGW_PREFIX}/bin/python3 setup.py build
}

check() {
  cd "${srcdir}/oslo.log-$pkgver"

  ${MINGW_PREFIX}/bin/python3 setup.py testr || warning "Tests failed"
}

package() {
  install=${_realname}3-${CARCH}.install

  cd "${srcdir}/oslo.log-$pkgver"

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build
# This entire section should be removed if the package does NOT install
# anything in the /mingw*/bin directory.
### begin section ###
  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}/|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done
#### end section ####
}
