# Maintainer: Antoine Martin <totaam@xpra.org>

_realname=xpra
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}-common")
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}-common")
pkgver=3.0.3
pkgrel=1
pkgdesc="Remote access client / server software"
arch=('any')
url='https://xpra.org'
license=('GPL2')
depends=("${MINGW_PACKAGE_PREFIX}-ffmpeg"
         "${MINGW_PACKAGE_PREFIX}-gtk3"
         "${MINGW_PACKAGE_PREFIX}-libyuv"
         "${MINGW_PACKAGE_PREFIX}-libvpx"
         "${MINGW_PACKAGE_PREFIX}-x264-git"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
         "${MINGW_PACKAGE_PREFIX}-python3"
         "${MINGW_PACKAGE_PREFIX}-python3-lz4"
         "${MINGW_PACKAGE_PREFIX}-python3-rencode"
         "${MINGW_PACKAGE_PREFIX}-python3-pillow"
         "${MINGW_PACKAGE_PREFIX}-python3-PyOpenGL"
         "${MINGW_PACKAGE_PREFIX}-python3-comtypes"
         "${MINGW_PACKAGE_PREFIX}-python3-setproctitle")
optdepends=("${MINGW_PACKAGE_PREFIX}-libnotify: notification support"
            "${MINGW_PACKAGE_PREFIX}-gst-plugins-bad: extra audio codecs"
            "${MINGW_PACKAGE_PREFIX}-gst-plugins-ugly: extra audio codecs"
            "${MINGW_PACKAGE_PREFIX}-gst-plugins-good: extra audio codecs"
            "${MINGW_PACKAGE_PREFIX}-gst-python: audio support"
            "${MINGW_PACKAGE_PREFIX}-python3-paramiko: SSH client and server support"
            "${MINGW_PACKAGE_PREFIX}-python3-dnspython: SSHFP support with paramiko"
            "${MINGW_PACKAGE_PREFIX}-python3-netifaces: mDNS and network integration"
            "${MINGW_PACKAGE_PREFIX}-python3-pyu2f: U2F authentication"
            "${MINGW_PACKAGE_PREFIX}-python3-ldap: LDAP authentication via python-ldap"
            "${MINGW_PACKAGE_PREFIX}-python3-ldap3: LDAP authentication via python-ldap3"
            "${MINGW_PACKAGE_PREFIX}-python3-cryptography: AES packet encryption"
            "${MINGW_PACKAGE_PREFIX}-python3-zeroconf: mDNS support"
            "${MINGW_PACKAGE_PREFIX}-python3-nvidia-ml: nvidia GPU support")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-brotli"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-cython"
             "${MINGW_PACKAGE_PREFIX}-pygobject-devel"
             "${MINGW_PACKAGE_PREFIX}-python3-cairo")
source=("https://xpra.org/src/xpra-${pkgver}.tar.xz")
sha512sums=('0d13a2685b22e0c90450c0dddeef0663255c6d9e15e347e960c9ac7857cd2081b15d1fdc29b816b5cfdf1f000375be34510fe25be23af3f3b63a8a25d1b31003')

prepare() {
  cd "${srcdir}"
  rm -rf python3-build-${CARCH} | true
  cp -r "${_realname}-${pkgver}" "python3-build-${CARCH}"
}

build() {
  cd "${srcdir}/python3-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python3 setup.py build \
    --without-cuda_kernels --with-data --with-html5 --with-modules
}

package() {
  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --without-cuda_kernels --with-data  --with-html5 --skip-build \
    --root="${pkgdir}/${MINW_PREFIX}" --share-xpra="./share/xpra"

  install -Dm644 COPYING "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/COPYING"
  install -Dm644 README "${pkgdir}${MINGW_PREFIX}/share/${_realname}/README"
  install -Dm644 bell.wav "${pkgdir}${MINGW_PREFIX}/share/${_realname}/bell.wav"

  #python version agnostic launch scripts in /bin:
  for script in xpra xpra_launcher; do
    install -Dm755 scripts/${script} "${pkgdir}${MINGW_PREFIX}/bin/${script}"
    #patch path to the python interpreter:
    sed -i -e "s+/usr/bin/python+$MINGW_PREFIX/bin/python+g" "${pkgdir}${MINGW_PREFIX}/bin/${script}"
  done

  #html5 client:
  ${MINGW_PREFIX}/bin/python3 ./setup_html5.py "${pkgdir}${MINGW_PREFIX}/share/${_realname}/www/"
}
